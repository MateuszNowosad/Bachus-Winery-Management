-- MySQL Script generated by MySQL Workbench
-- Sun Oct 21 14:33:22 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ISBD
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ISBD
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ISBD` DEFAULT CHARACTER SET utf8 ;
USE `ISBD` ;

-- -----------------------------------------------------
-- Table `ISBD`.`dict_odmiana_winogron`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_odmiana_winogron` (
  `idodmiana_winogron` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NOT NULL,
  `opis` VARCHAR(255) NULL,
  PRIMARY KEY (`idodmiana_winogron`),
  UNIQUE INDEX `idrodzaj_winogron_UNIQUE` (`idodmiana_winogron` ASC),
  UNIQUE INDEX `nazwa_UNIQUE` (`nazwa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`winnica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`winnica` (
  `idwinnica` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(40) NOT NULL,
  `powierzchnia` DECIMAL(6,2) NOT NULL,
  `stan` ENUM('Aktywna', 'Nieczynna') NOT NULL,
  `terroir` VARCHAR(255) NULL,
  `data_ostatniego_zbioru` DATE NULL,
  `data_zasadzenia` DATE NOT NULL,
  `ewidencyjny_id_dzialki` VARCHAR(45) NOT NULL,
  `odmiania_winogron_idodmiana_winogron` INT NOT NULL,
  PRIMARY KEY (`idwinnica`),
  UNIQUE INDEX `idwinnica_UNIQUE` (`idwinnica` ASC),
  UNIQUE INDEX `nazwa_UNIQUE` (`nazwa` ASC),
  UNIQUE INDEX `ewidencyjny_id_dzialki_UNIQUE` (`ewidencyjny_id_dzialki` ASC),
  INDEX `fk_winnica_rodzaj_winogron1_idx` (`odmiania_winogron_idodmiana_winogron` ASC),
  CONSTRAINT `fk_winnica_rodzaj_winogron1`
    FOREIGN KEY (`odmiania_winogron_idodmiana_winogron`)
    REFERENCES `ISBD`.`dict_odmiana_winogron` (`idodmiana_winogron`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`adres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`adres` (
  `idadres` INT NOT NULL AUTO_INCREMENT,
  `miasto` VARCHAR(20) NOT NULL,
  `kod_pocztowy` VARCHAR(5) NOT NULL,
  `ulica` VARCHAR(45) NOT NULL,
  `nr_lokalu` VARCHAR(2) NULL,
  `nr_posesji` VARCHAR(5) NOT NULL,
  `kraj` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idadres`),
  UNIQUE INDEX `idadres_UNIQUE` (`idadres` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`kontrahenci`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`kontrahenci` (
  `idkontrahenci` INT NOT NULL AUTO_INCREMENT,
  `NIP` VARCHAR(10) NULL,
  `nazwa_spółki` VARCHAR(40) NOT NULL,
  `telefon` VARCHAR(11) NOT NULL,
  `e-mail` VARCHAR(90) NOT NULL,
  `strona_www` VARCHAR(255) NULL,
  `KRS` VARCHAR(10) NULL,
  `nr_konta` VARCHAR(26) NOT NULL,
  `fax` VARCHAR(45) NULL,
  `adres_idadres` INT NOT NULL,
  PRIMARY KEY (`idkontrahenci`),
  UNIQUE INDEX `telefon_UNIQUE` (`telefon` ASC),
  UNIQUE INDEX `NIP_UNIQUE` (`NIP` ASC),
  UNIQUE INDEX `e-mail_UNIQUE` (`e-mail` ASC),
  UNIQUE INDEX `nazwa_spółki_UNIQUE` (`nazwa_spółki` ASC),
  INDEX `fk_kontrahenci_adres1_idx` (`adres_idadres` ASC),
  UNIQUE INDEX `idkontrahenci_UNIQUE` (`idkontrahenci` ASC),
  UNIQUE INDEX `KRS_UNIQUE` (`KRS` ASC),
  UNIQUE INDEX `nr_konta_UNIQUE` (`nr_konta` ASC),
  CONSTRAINT `fk_kontrahenci_adres1`
    FOREIGN KEY (`adres_idadres`)
    REFERENCES `ISBD`.`adres` (`idadres`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`winobranie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`winobranie` (
  `idwinobranie` INT NOT NULL AUTO_INCREMENT,
  `data_winobrania` DATE NOT NULL,
  `ilosc_zebranych_winogron` DECIMAL(4,1) NOT NULL,
  `winnica_idwinnica` INT NOT NULL,
  PRIMARY KEY (`idwinobranie`),
  INDEX `fk_winobranie_winnica1_idx` (`winnica_idwinnica` ASC),
  UNIQUE INDEX `idwinobranie_UNIQUE` (`idwinobranie` ASC),
  CONSTRAINT `fk_winobranie_winnica1`
    FOREIGN KEY (`winnica_idwinnica`)
    REFERENCES `ISBD`.`winnica` (`idwinnica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`przesylka`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`przesylka` (
  `idprzesylka` INT NOT NULL AUTO_INCREMENT,
  `nazwa_przesylki` VARCHAR(45) NOT NULL,
  `ciezar_ladunku` DECIMAL(6,2) NOT NULL,
  `data` DATETIME NOT NULL,
  PRIMARY KEY (`idprzesylka`),
  UNIQUE INDEX `idprzesylka_UNIQUE` (`idprzesylka` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`list_przewozowy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`list_przewozowy` (
  `idlist_przewozowy` INT NOT NULL AUTO_INCREMENT,
  `imie_kierowcy` VARCHAR(45) NOT NULL,
  `nazwisko_kierowcy` VARCHAR(60) NOT NULL,
  `uwagi_przewoznika` VARCHAR(255) NULL,
  `zastrzezeniai_odbiorcy` VARCHAR(255) NULL,
  `e_dokument` VARCHAR(255) NOT NULL COMMENT 'urle do podpisow/pieczatek',
  `przesylka_idprzesylka` INT NOT NULL,
  PRIMARY KEY (`idlist_przewozowy`),
  UNIQUE INDEX `idlist_przewozowy_UNIQUE` (`idlist_przewozowy` ASC),
  INDEX `fk_list_przewozowy_przesylka1_idx` (`przesylka_idprzesylka` ASC),
  CONSTRAINT `fk_list_przewozowy_przesylka1`
    FOREIGN KEY (`przesylka_idprzesylka`)
    REFERENCES `ISBD`.`przesylka` (`idprzesylka`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`dict_rola_uzytkownikow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_rola_uzytkownikow` (
  `idrola_uzytkownikow` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NOT NULL,
  `opis` VARCHAR(255) NULL,
  `typ` VARCHAR(45) NOT NULL COMMENT 'poziom uprawnien',
  PRIMARY KEY (`idrola_uzytkownikow`),
  UNIQUE INDEX `idrola_uzytkownikow_UNIQUE` (`idrola_uzytkownikow` ASC),
  UNIQUE INDEX `nazwa_roli_UNIQUE` (`nazwa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`uzytkownicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`uzytkownicy` (
  `iduzytkownika` INT NOT NULL AUTO_INCREMENT,
  `imie` VARCHAR(30) NOT NULL,
  `nazwisko` VARCHAR(30) NOT NULL,
  `login` VARCHAR(10) NOT NULL,
  `haslo` BINARY(60) NOT NULL COMMENT 'niejawne',
  `PESEL` VARCHAR(11) NOT NULL,
  `e_mail` VARCHAR(40) NOT NULL,
  `nr_telefonu` VARCHAR(11) NOT NULL,
  `data_ostatniego_logowania` DATETIME NOT NULL,
  `adres_idadres` INT NOT NULL,
  `dict_rola_uzytkownikow_idrola_uzytkownikow` INT NOT NULL,
  `zdjecie` VARCHAR(100) NULL,
  `czyAktywne` TINYINT(1) NOT NULL,
  PRIMARY KEY (`iduzytkownika`),
  UNIQUE INDEX `nr_telefonu_UNIQUE` (`nr_telefonu` ASC),
  UNIQUE INDEX `e_mail_UNIQUE` (`e_mail` ASC),
  UNIQUE INDEX `PESEL_UNIQUE` (`PESEL` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `fk_uzytkownicy_adres1_idx` (`adres_idadres` ASC),
  UNIQUE INDEX `iduzytkownika_UNIQUE` (`iduzytkownika` ASC),
  INDEX `fk_uzytkownicy_dict_rola_uzytkownikow1_idx` (`dict_rola_uzytkownikow_idrola_uzytkownikow` ASC),
  CONSTRAINT `fk_uzytkownicy_adres1`
    FOREIGN KEY (`adres_idadres`)
    REFERENCES `ISBD`.`adres` (`idadres`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_uzytkownicy_dict_rola_uzytkownikow1`
    FOREIGN KEY (`dict_rola_uzytkownikow_idrola_uzytkownikow`)
    REFERENCES `ISBD`.`dict_rola_uzytkownikow` (`idrola_uzytkownikow`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`dict_kategorie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_kategorie` (
  `idkategorie` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(20) NOT NULL,
  `jednostka` VARCHAR(20) NOT NULL,
  `opis` VARCHAR(250) NULL,
  PRIMARY KEY (`idkategorie`),
  UNIQUE INDEX `idkategorie_UNIQUE` (`idkategorie` ASC),
  UNIQUE INDEX `nazwa_UNIQUE` (`nazwa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`magazyn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`magazyn` (
  `idmagazyn` INT NOT NULL AUTO_INCREMENT,
  `rodzaj` ENUM('polproduktow', 'materialow', 'produktow_skonczonych') NOT NULL,
  `pojemnosc` DECIMAL(6,1) NOT NULL,
  `adres_idadres` INT NOT NULL,
  PRIMARY KEY (`idmagazyn`),
  INDEX `fk_magazyn_adres1_idx` (`adres_idadres` ASC),
  UNIQUE INDEX `idmagazyn_UNIQUE` (`idmagazyn` ASC),
  CONSTRAINT `fk_magazyn_adres1`
    FOREIGN KEY (`adres_idadres`)
    REFERENCES `ISBD`.`adres` (`idadres`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`dict_typ_partii`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_typ_partii` (
  `idtyp_partii` INT NOT NULL AUTO_INCREMENT COMMENT 'slownikowa\ninne dane niz w dict_kategorie',
  `nazwa` VARCHAR(45) NOT NULL COMMENT 'typ_partii',
  `jednostka` VARCHAR(45) NOT NULL COMMENT 'sztuki, kilkogramy, itd',
  PRIMARY KEY (`idtyp_partii`),
  UNIQUE INDEX `idtyp_partii_UNIQUE` (`idtyp_partii` ASC),
  UNIQUE INDEX `nazwa_UNIQUE` (`nazwa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`dict_kategoria_wina`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_kategoria_wina` (
  `iddict_kategoria_wina` INT NOT NULL,
  `nazwa_kategoria` VARCHAR(45) NOT NULL,
  `opis` VARCHAR(255) NULL,
  PRIMARY KEY (`iddict_kategoria_wina`),
  UNIQUE INDEX `iddict_kategoria_wina_UNIQUE` (`iddict_kategoria_wina` ASC),
  UNIQUE INDEX `nazwa_kategoria_UNIQUE` (`nazwa_kategoria` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`informacje_o_winie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`informacje_o_winie` (
  `idinformacje_o_winie` INT NOT NULL AUTO_INCREMENT COMMENT 'usunięto:\nzawartosc_alkocholu\nzawartosc_cukru\n',
  `nazwa` VARCHAR(45) NOT NULL,
  `motto` VARCHAR(100) NULL COMMENT 'mysl przewodnia etykiety\n',
  `zawartosc_pot_alergenow` VARCHAR(255) NULL COMMENT 'zawartosc potencjalnych alergenow',
  `wartosc_energetyczna` INT(3) NOT NULL,
  `dict_kategoria_wina_iddict_kategoria_wina` INT NOT NULL,
  PRIMARY KEY (`idinformacje_o_winie`),
  UNIQUE INDEX `idinformacje_o_winie_UNIQUE` (`idinformacje_o_winie` ASC),
  INDEX `fk_informacje_o_winie_dict_kategoria_wina1_idx` (`dict_kategoria_wina_iddict_kategoria_wina` ASC),
  CONSTRAINT `fk_informacje_o_winie_dict_kategoria_wina1`
    FOREIGN KEY (`dict_kategoria_wina_iddict_kategoria_wina`)
    REFERENCES `ISBD`.`dict_kategoria_wina` (`iddict_kategoria_wina`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`partie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`partie` (
  `idpartie` INT NOT NULL AUTO_INCREMENT,
  `ilosc` DECIMAL(4,1) NOT NULL,
  `opis` VARCHAR(255) NULL,
  `data_utworzenia` DATETIME NOT NULL,
  `winobranie_idwinobranie` INT NULL,
  `partie_idpartie` INT NULL,
  `typ_partii_idtyp_partii` INT NOT NULL,
  `informacje_o_winie_idinformacje_o_winie` INT NULL,
  PRIMARY KEY (`idpartie`),
  INDEX `fk_partie_winobranie1_idx` (`winobranie_idwinobranie` ASC),
  INDEX `fk_partie_partie1_idx` (`partie_idpartie` ASC),
  INDEX `fk_partie_typ_partii1_idx` (`typ_partii_idtyp_partii` ASC),
  INDEX `fk_partie_informacje_o_winie1_idx` (`informacje_o_winie_idinformacje_o_winie` ASC),
  UNIQUE INDEX `idpartie_UNIQUE` (`idpartie` ASC),
  CONSTRAINT `fk_partie_winobranie1`
    FOREIGN KEY (`winobranie_idwinobranie`)
    REFERENCES `ISBD`.`winobranie` (`idwinobranie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_partie_partie1`
    FOREIGN KEY (`partie_idpartie`)
    REFERENCES `ISBD`.`partie` (`idpartie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_partie_typ_partii1`
    FOREIGN KEY (`typ_partii_idtyp_partii`)
    REFERENCES `ISBD`.`dict_typ_partii` (`idtyp_partii`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_partie_informacje_o_winie1`
    FOREIGN KEY (`informacje_o_winie_idinformacje_o_winie`)
    REFERENCES `ISBD`.`informacje_o_winie` (`idinformacje_o_winie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`pozycja_w_magazynie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`pozycja_w_magazynie` (
  `idpozycja` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NOT NULL,
  `opis` VARCHAR(255) NULL,
  `ilosc` DECIMAL(4,1) NOT NULL,
  `kod_kreskowy` VARCHAR(13) NOT NULL,
  `stan_aktualny` TINYINT NOT NULL COMMENT 'boolean - jest, nie ma(archiwum)',
  `data_przyjecia` DATETIME NOT NULL,
  `data_wydania` DATETIME NULL,
  `nazwa_sektora` VARCHAR(45) NOT NULL COMMENT 'lokalizacja poszczegolnych dobr na terenie magazynu',
  `kategorie_idkategorie` INT NOT NULL,
  `magazyn_idmagazyn` INT NOT NULL,
  `partie_idpartie` INT NULL,
  PRIMARY KEY (`idpozycja`),
  INDEX `fk_magazyn_materialow_kategorie1_idx` (`kategorie_idkategorie` ASC),
  INDEX `fk_pozycja_w_magazynie_materialow_magazyn1_idx` (`magazyn_idmagazyn` ASC),
  INDEX `fk_pozycja_w_magazynie_materialow_partie1_idx` (`partie_idpartie` ASC),
  UNIQUE INDEX `idpozycja_UNIQUE` (`idpozycja` ASC),
  CONSTRAINT `fk_magazyn_materialow_kategorie1`
    FOREIGN KEY (`kategorie_idkategorie`)
    REFERENCES `ISBD`.`dict_kategorie` (`idkategorie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pozycja_w_magazynie_materialow_magazyn1`
    FOREIGN KEY (`magazyn_idmagazyn`)
    REFERENCES `ISBD`.`magazyn` (`idmagazyn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pozycja_w_magazynie_materialow_partie1`
    FOREIGN KEY (`partie_idpartie`)
    REFERENCES `ISBD`.`partie` (`idpartie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`dict_procesy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_procesy` (
  `iddict_procesy` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(40) NOT NULL,
  `opis` VARCHAR(255) NULL,
  `dodatkowe` VARCHAR(80) NULL,
  PRIMARY KEY (`iddict_procesy`),
  UNIQUE INDEX `iddict_procesy_UNIQUE` (`iddict_procesy` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`operacje`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`operacje` (
  `idoperacja` INT NOT NULL AUTO_INCREMENT,
  `ilosc_przed` DECIMAL(6,2) NOT NULL,
  `ilosc_po` DECIMAL(6,2) NULL,
  `data_poczatku` DATETIME NOT NULL,
  `data_zakonczenia` DATETIME NULL,
  `zawartosc_alkoholu` DECIMAL(2,1) NULL,
  `ilosc_dodatku` DECIMAL(3,1) NULL COMMENT 'np pozywka drozdzy\n',
  `zawartosc_cukru` DECIMAL(2,1) NULL,
  `kwasowosc` DECIMAL(2,1) NULL COMMENT 'pH',
  `temperatura` DECIMAL(2,1) NULL,
  `opis` VARCHAR(255) NULL,
  `uzytkownicy_iduzytkownicy` INT NOT NULL,
  `dict_procesy_iddict_procesy` INT NOT NULL,
  PRIMARY KEY (`idoperacja`),
  UNIQUE INDEX `idoperacja_UNIQUE` (`idoperacja` ASC),
  INDEX `fk_operacyjna_uzytkownicy1_idx` (`uzytkownicy_iduzytkownicy` ASC),
  INDEX `fk_operacyjna_dict_procesy1_idx` (`dict_procesy_iddict_procesy` ASC),
  CONSTRAINT `fk_operacyjna_uzytkownicy1`
    FOREIGN KEY (`uzytkownicy_iduzytkownicy`)
    REFERENCES `ISBD`.`uzytkownicy` (`iduzytkownika`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacyjna_dict_procesy1`
    FOREIGN KEY (`dict_procesy_iddict_procesy`)
    REFERENCES `ISBD`.`dict_procesy` (`iddict_procesy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`operacje_has_partie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`operacje_has_partie` (
  `idoperacje_has_partie` INT NOT NULL AUTO_INCREMENT,
  `operacje_idoperacja` INT NOT NULL,
  `partie_idpartie` INT NOT NULL,
  `ilosc` DECIMAL(4,1) NOT NULL,
  INDEX `fk_operacyjna_has_partie_partie1_idx` (`partie_idpartie` ASC),
  INDEX `fk_operacyjna_has_partie_operacyjna1_idx` (`operacje_idoperacja` ASC),
  PRIMARY KEY (`idoperacje_has_partie`),
  UNIQUE INDEX `operacje_has_partiecol_UNIQUE` (`idoperacje_has_partie` ASC),
  CONSTRAINT `fk_operacyjna_has_partie_operacyjna1`
    FOREIGN KEY (`operacje_idoperacja`)
    REFERENCES `ISBD`.`operacje` (`idoperacja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacyjna_has_partie_partie1`
    FOREIGN KEY (`partie_idpartie`)
    REFERENCES `ISBD`.`partie` (`idpartie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`operacje_has_pozycja_w_magazynie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`operacje_has_pozycja_w_magazynie` (
  `idoperacje_has_pozycja_w_magazynie` INT NOT NULL AUTO_INCREMENT,
  `operacje_idoperacja` INT NOT NULL,
  `pozycja_w_magazynie_idpozycja` INT NOT NULL,
  `ilosc` VARCHAR(45) NOT NULL,
  INDEX `fk_operacyjna_has_pozycja_w_magazynie_materialow_pozycja_w__idx` (`pozycja_w_magazynie_idpozycja` ASC),
  INDEX `fk_operacyjna_has_pozycja_w_magazynie_materialow_operacyjna_idx` (`operacje_idoperacja` ASC),
  PRIMARY KEY (`idoperacje_has_pozycja_w_magazynie`),
  UNIQUE INDEX `idoperacje_has_pozycja_w_magazynie_UNIQUE` (`idoperacje_has_pozycja_w_magazynie` ASC),
  CONSTRAINT `fk_operacyjna_has_pozycja_w_magazynie_materialow_operacyjna1`
    FOREIGN KEY (`operacje_idoperacja`)
    REFERENCES `ISBD`.`operacje` (`idoperacja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacyjna_has_pozycja_w_magazynie_materialow_pozycja_w_ma1`
    FOREIGN KEY (`pozycja_w_magazynie_idpozycja`)
    REFERENCES `ISBD`.`pozycja_w_magazynie` (`idpozycja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`plany_produkcyjne`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`plany_produkcyjne` (
  `idplany_produkcyjne` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NOT NULL,
  `opis` VARCHAR(255) NULL,
  `dict_rodzaj_winogron_idrodzaj_winogron` INT NOT NULL,
  `dict_typ_partii_idtyp_partii` INT NOT NULL,
  `dict_kategorie_idkategorie` INT NOT NULL,
  `e_dokument` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idplany_produkcyjne`),
  INDEX `fk_plany_produkcyjne_dict_rodzaj_winogron1_idx` (`dict_rodzaj_winogron_idrodzaj_winogron` ASC),
  INDEX `fk_plany_produkcyjne_dict_typ_partii1_idx` (`dict_typ_partii_idtyp_partii` ASC),
  INDEX `fk_plany_produkcyjne_dict_kategorie1_idx` (`dict_kategorie_idkategorie` ASC),
  UNIQUE INDEX `idplany_produkcyjne_UNIQUE` (`idplany_produkcyjne` ASC),
  CONSTRAINT `fk_plany_produkcyjne_dict_rodzaj_winogron1`
    FOREIGN KEY (`dict_rodzaj_winogron_idrodzaj_winogron`)
    REFERENCES `ISBD`.`dict_odmiana_winogron` (`idodmiana_winogron`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_plany_produkcyjne_dict_typ_partii1`
    FOREIGN KEY (`dict_typ_partii_idtyp_partii`)
    REFERENCES `ISBD`.`dict_typ_partii` (`idtyp_partii`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_plany_produkcyjne_dict_kategorie1`
    FOREIGN KEY (`dict_kategorie_idkategorie`)
    REFERENCES `ISBD`.`dict_kategorie` (`idkategorie`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`dict_operacje_na_winnicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`dict_operacje_na_winnicy` (
  `iddict_operacje_na_winnicy` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NOT NULL,
  `opis` VARCHAR(255) NULL,
  PRIMARY KEY (`iddict_operacje_na_winnicy`),
  UNIQUE INDEX `iddict_operacje_na_winnicy_UNIQUE` (`iddict_operacje_na_winnicy` ASC),
  UNIQUE INDEX `nazwa_UNIQUE` (`nazwa` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`operacje_na_winnicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`operacje_na_winnicy` (
  `idoperacja` INT NOT NULL AUTO_INCREMENT,
  `data` DATETIME NOT NULL,
  `opis` VARCHAR(255) NULL,
  `dict_operacje_na_winnicy_iddict_operacje_na_winnicy` INT NOT NULL,
  `winnica_idwinnica` INT NOT NULL,
  PRIMARY KEY (`idoperacja`),
  INDEX `fk_operacje_na_winnicy_dict_operacje_na_winnicy1_idx` (`dict_operacje_na_winnicy_iddict_operacje_na_winnicy` ASC),
  INDEX `fk_operacje_na_winnicy_winnica1_idx` (`winnica_idwinnica` ASC),
  UNIQUE INDEX `idoperacje_na_winnicy_UNIQUE` (`idoperacja` ASC),
  CONSTRAINT `fk_operacje_na_winnicy_dict_operacje_na_winnicy1`
    FOREIGN KEY (`dict_operacje_na_winnicy_iddict_operacje_na_winnicy`)
    REFERENCES `ISBD`.`dict_operacje_na_winnicy` (`iddict_operacje_na_winnicy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacje_na_winnicy_winnica1`
    FOREIGN KEY (`winnica_idwinnica`)
    REFERENCES `ISBD`.`winnica` (`idwinnica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`przesylka_has_pozycja_w_magazynie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`przesylka_has_pozycja_w_magazynie` (
  `idprzesylka_has_pozycja_w_magazynie` INT NOT NULL AUTO_INCREMENT,
  `przesylka_idprzesylka` INT NOT NULL,
  `pozycja_w_magazynie_idpozycja` INT NOT NULL,
  `ilosc` DECIMAL(4,1) NOT NULL,
  INDEX `fk_przesylka_has_pozycja_w_magazynie_materialow_pozycja_w_m_idx` (`pozycja_w_magazynie_idpozycja` ASC),
  INDEX `fk_przesylka_has_pozycja_w_magazynie_materialow_przesylka1_idx` (`przesylka_idprzesylka` ASC),
  PRIMARY KEY (`idprzesylka_has_pozycja_w_magazynie`),
  UNIQUE INDEX `idprzesylka_has_pozycja_w_magazynie_UNIQUE` (`idprzesylka_has_pozycja_w_magazynie` ASC),
  CONSTRAINT `fk_przesylka_has_pozycja_w_magazynie_materialow_przesylka1`
    FOREIGN KEY (`przesylka_idprzesylka`)
    REFERENCES `ISBD`.`przesylka` (`idprzesylka`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_przesylka_has_pozycja_w_magazynie_materialow_pozycja_w_mag1`
    FOREIGN KEY (`pozycja_w_magazynie_idpozycja`)
    REFERENCES `ISBD`.`pozycja_w_magazynie` (`idpozycja`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`list_przewozowy_has_kontrahenci`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`list_przewozowy_has_kontrahenci` (
  `idlist_przewozowy_has_kontrahenci` INT NOT NULL AUTO_INCREMENT,
  `list_przewozowy_idlist_przewozowy` INT NOT NULL,
  `kontrahenci_idkontrahenci` INT NOT NULL,
  `typ` ENUM('Odbiorca', 'Przewoznik') NOT NULL,
  INDEX `fk_list_przewozowy_has_kontrahenci_kontrahenci1_idx` (`kontrahenci_idkontrahenci` ASC),
  INDEX `fk_list_przewozowy_has_kontrahenci_list_przewozowy1_idx` (`list_przewozowy_idlist_przewozowy` ASC),
  PRIMARY KEY (`idlist_przewozowy_has_kontrahenci`),
  UNIQUE INDEX `idlist_przewozowy_has_kontrahenci_UNIQUE` (`idlist_przewozowy_has_kontrahenci` ASC),
  CONSTRAINT `fk_list_przewozowy_has_kontrahenci_list_przewozowy1`
    FOREIGN KEY (`list_przewozowy_idlist_przewozowy`)
    REFERENCES `ISBD`.`list_przewozowy` (`idlist_przewozowy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_list_przewozowy_has_kontrahenci_kontrahenci1`
    FOREIGN KEY (`kontrahenci_idkontrahenci`)
    REFERENCES `ISBD`.`kontrahenci` (`idkontrahenci`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`plany_produkcyjne_has_dict_procesy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`plany_produkcyjne_has_dict_procesy` (
  `idplany_produkcyjne_has_dict_procesy` INT NOT NULL AUTO_INCREMENT,
  `plany_produkcyjne_idplany_produkcyjne` INT NOT NULL,
  `dict_procesy_iddict_procesy` INT NOT NULL,
  INDEX `fk_plany_produkcyjne_has_dict_procesy_dict_procesy1_idx` (`dict_procesy_iddict_procesy` ASC),
  INDEX `fk_plany_produkcyjne_has_dict_procesy_plany_produkcyjne1_idx` (`plany_produkcyjne_idplany_produkcyjne` ASC),
  PRIMARY KEY (`idplany_produkcyjne_has_dict_procesy`),
  UNIQUE INDEX `idplany_produkcyjne_has_dict_procesy_UNIQUE` (`idplany_produkcyjne_has_dict_procesy` ASC),
  CONSTRAINT `fk_plany_produkcyjne_has_dict_procesy_plany_produkcyjne1`
    FOREIGN KEY (`plany_produkcyjne_idplany_produkcyjne`)
    REFERENCES `ISBD`.`plany_produkcyjne` (`idplany_produkcyjne`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_plany_produkcyjne_has_dict_procesy_dict_procesy1`
    FOREIGN KEY (`dict_procesy_iddict_procesy`)
    REFERENCES `ISBD`.`dict_procesy` (`iddict_procesy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`list_przewozowy_has_adres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`list_przewozowy_has_adres` (
  `idlist_przewozowy_has_adres` INT NOT NULL AUTO_INCREMENT,
  `adres_idadres` INT NOT NULL,
  `miejsce` ENUM('Nadania', 'Odbioru') NOT NULL,
  `list_przewozowy_idlist_przewozowy` INT NOT NULL,
  INDEX `fk_przesylka_has_adres_adres1_idx` (`adres_idadres` ASC),
  PRIMARY KEY (`idlist_przewozowy_has_adres`),
  UNIQUE INDEX `idprzesylka_has_adres_UNIQUE` (`idlist_przewozowy_has_adres` ASC),
  INDEX `fk_przesylka_has_adres_list_przewozowy1_idx` (`list_przewozowy_idlist_przewozowy` ASC),
  CONSTRAINT `fk_przesylka_has_adres_adres1`
    FOREIGN KEY (`adres_idadres`)
    REFERENCES `ISBD`.`adres` (`idadres`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_przesylka_has_adres_list_przewozowy1`
    FOREIGN KEY (`list_przewozowy_idlist_przewozowy`)
    REFERENCES `ISBD`.`list_przewozowy` (`idlist_przewozowy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`raporty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`raporty` (
  `idraport` INT NOT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(45) NOT NULL,
  `e_dokument` VARCHAR(255) NOT NULL,
  `data_utworzenia` DATETIME NOT NULL,
  PRIMARY KEY (`idraport`),
  UNIQUE INDEX `idraport_UNIQUE` (`idraport` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ISBD`.`raporty_has_uzytkownicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ISBD`.`raporty_has_uzytkownicy` (
  `idraporty_has_uzytkownicy` INT NOT NULL AUTO_INCREMENT,
  `raporty_idraport` INT NOT NULL,
  `uzytkownicy_iduzytkownika` INT NOT NULL,
  INDEX `fk_raporty_has_uzytkownicy_uzytkownicy1_idx` (`uzytkownicy_iduzytkownika` ASC),
  INDEX `fk_raporty_has_uzytkownicy_raporty1_idx` (`raporty_idraport` ASC),
  PRIMARY KEY (`idraporty_has_uzytkownicy`),
  UNIQUE INDEX `idraporty_has_uzytkownicy_UNIQUE` (`idraporty_has_uzytkownicy` ASC),
  CONSTRAINT `fk_raporty_has_uzytkownicy_raporty1`
    FOREIGN KEY (`raporty_idraport`)
    REFERENCES `ISBD`.`raporty` (`idraport`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_raporty_has_uzytkownicy_uzytkownicy1`
    FOREIGN KEY (`uzytkownicy_iduzytkownika`)
    REFERENCES `ISBD`.`uzytkownicy` (`iduzytkownika`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
